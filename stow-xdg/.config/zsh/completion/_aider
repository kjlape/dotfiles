#compdef aider

_aider() {
    local -a options
    options=(
        # Main options
        '(--openai-api-key)--openai-api-key[Specify the OpenAI API key]:key'
        '(--anthropic-api-key)--anthropic-api-key[Specify the Anthropic API key]:key'
        '(--model)--model[Specify the model to use for the main chat]:model'
        '(--opus)--opus[Use claude-3-opus-20240229 model for the main chat]'
        '(--sonnet)--sonnet[Use claude-3-5-sonnet-20240620 model for the main chat]'
        '(-4 --4)'{-4,--4}'[Use gpt-4-0613 model for the main chat]'
        '(--4o)--4o[Use gpt-4o-2024-08-06 model for the main chat]'
        '(--mini)--mini[Use gpt-4o-mini model for the main chat]'
        '(--4-turbo)--4-turbo[Use gpt-4-1106-preview model for the main chat]'
        '(-3 --35turbo --35-turbo)'{-3,--35turbo,--35-turbo}'[Use gpt-3.5-turbo model for the main chat]'
        '(--deepseek)--deepseek[Use deepseek/deepseek-coder model for the main chat]'

        # Model Settings
        '(--list-models)--list-models[List known models which match the (partial) MODEL name]:model'
        '(--openai-api-base)--openai-api-base[Specify the api base url]:url'
        '(--openai-api-type)--openai-api-type[Specify the api_type]:type'
        '(--openai-api-version)--openai-api-version[Specify the api_version]:version'
        '(--openai-api-deployment-id)--openai-api-deployment-id[Specify the deployment_id]:id'
        '(--openai-organization-id)--openai-organization-id[Specify the OpenAI organization ID]:id'
        '(--model-settings-file)--model-settings-file[Specify a file with aider model settings for unknown models]:file:_files'
        '(--model-metadata-file)--model-metadata-file[Specify a file with context window and costs for unknown models]:file:_files'
        '(--verify-ssl --no-verify-ssl)'{--verify-ssl,--no-verify-ssl}'[Verify the SSL cert when connecting to models]'
        '(--edit-format)--edit-format[Specify what edit format the LLM should use]:format'
        '(--weak-model)--weak-model[Specify the model to use for commit messages and chat history summarization]:model'
        '(--show-model-warnings --no-show-model-warnings)'{--show-model-warnings,--no-show-model-warnings}'[Only work with models that have meta-data available]'
        '(--map-tokens)--map-tokens[Suggested number of tokens to use for repo map]:tokens'
        '(--map-refresh)--map-refresh[Control how often the repo map is refreshed]:refresh:(auto always files manual)'
        '(--cache-prompts --no-cache-prompts)'{--cache-prompts,--no-cache-prompts}'[Enable caching of prompts]'
        '(--cache-keepalive-pings)--cache-keepalive-pings[Number of times to ping at 5min intervals to keep prompt cache warm]:pings'
        '(--map-multiplier-no-files)--map-multiplier-no-files[Multiplier for map tokens when no files are specified]:multiplier'
        '(--max-chat-history-tokens)--max-chat-history-tokens[Maximum number of tokens to use for chat history]:tokens'
        '(--env-file)--env-file[Specify the .env file to load]:file:_files'

        # History Files
        '(--input-history-file)--input-history-file[Specify the chat input history file]:file:_files'
        '(--chat-history-file)--chat-history-file[Specify the chat history file]:file:_files'
        '(--restore-chat-history --no-restore-chat-history)'{--restore-chat-history,--no-restore-chat-history}'[Restore the previous chat history messages]'
        '(--llm-history-file)--llm-history-file[Log the conversation with the LLM to this file]:file:_files'

        # Output Settings
        '(--dark-mode)--dark-mode[Use colors suitable for a dark terminal background]'
        '(--light-mode)--light-mode[Use colors suitable for a light terminal background]'
        '(--pretty --no-pretty)'{--pretty,--no-pretty}'[Enable/disable pretty, colorized output]'
        '(--stream --no-stream)'{--stream,--no-stream}'[Enable/disable streaming responses]'
        '(--user-input-color)--user-input-color[Set the color for user input]:color'
        '(--tool-output-color)--tool-output-color[Set the color for tool output]:color'
        '(--tool-error-color)--tool-error-color[Set the color for tool error messages]:color'
        '(--tool-warning-color)--tool-warning-color[Set the color for tool warning messages]:color'
        '(--assistant-output-color)--assistant-output-color[Set the color for assistant output]:color'
        '(--code-theme)--code-theme[Set the markdown code theme]:theme:(default monokai solarized-dark solarized-light)'
        '(--show-diffs)--show-diffs[Show diffs when committing changes]'

        # Git Settings
        '(--git --no-git)'{--git,--no-git}'[Enable/disable looking for a git repo]'
        '(--gitignore --no-gitignore)'{--gitignore,--no-gitignore}'[Enable/disable adding .aider* to .gitignore]'
        '(--aiderignore)--aiderignore[Specify the aider ignore file]:file:_files'
        '(--subtree-only)--subtree-only[Only consider files in the current subtree of the git repository]'
        '(--auto-commits --no-auto-commits)'{--auto-commits,--no-auto-commits}'[Enable/disable auto commit of LLM changes]'
        '(--dirty-commits --no-dirty-commits)'{--dirty-commits,--no-dirty-commits}'[Enable/disable commits when repo is found dirty]'
        '(--attribute-author --no-attribute-author)'{--attribute-author,--no-attribute-author}'[Attribute aider code changes in the git author name]'
        '(--attribute-committer --no-attribute-committer)'{--attribute-committer,--no-attribute-committer}'[Attribute aider commits in the git committer name]'
        '(--attribute-commit-message-author --no-attribute-commit-message-author)'{--attribute-commit-message-author,--no-attribute-commit-message-author}'[Prefix commit messages with '"'"'aider: '"'"' if aider authored the changes]'
        '(--attribute-commit-message-committer --no-attribute-commit-message-committer)'{--attribute-commit-message-committer,--no-attribute-commit-message-committer}'[Prefix all commit messages with '"'"'aider: '"'"']'
        '(--commit)--commit[Commit all pending changes with a suitable commit message, then exit]'
        '(--commit-prompt)--commit-prompt[Specify a custom prompt for generating commit messages]:prompt'
        '(--dry-run --no-dry-run)'{--dry-run,--no-dry-run}'[Perform a dry run without modifying files]'

        # Fixing and committing
        '(--lint)--lint[Lint and fix provided files, or dirty files if none provided]'
        '(--lint-cmd)--lint-cmd[Specify lint commands to run for different languages]:cmd'
        '(--auto-lint --no-auto-lint)'{--auto-lint,--no-auto-lint}'[Enable/disable automatic linting after changes]'
        '(--test-cmd)--test-cmd[Specify command to run tests]:cmd'
        '(--auto-test --no-auto-test)'{--auto-test,--no-auto-test}'[Enable/disable automatic testing after changes]'
        '(--test)--test[Run tests and fix problems found]'

        # Other Settings
        '(--file)--file[Specify a file to edit]:file:_files'
        '(--read)--read[Specify a read-only file]:file:_files'
        '(--vim)--vim[Use VI editing mode in the terminal]'
        '(--voice-language)--voice-language[Specify the language for voice using ISO 639-1 code]:language'
        '(--chat-language)--chat-language[Specify the language to use in the chat]:language'
        '(--version)--version[Show the version number and exit]'
        '(--just-check-update)--just-check-update[Check for updates and return status in the exit code]'
        '(--check-update --no-check-update)'{--check-update,--no-check-update}'[Check for new aider versions on launch]'
        '(--install-main-branch)--install-main-branch[Install the latest version from the main branch]'
        '(--upgrade --update)'{--upgrade,--update}'[Upgrade aider to the latest version from PyPI]'
        '(--apply)--apply[Apply the changes from the given file instead of running the chat]:file:_files'
        '(--yes)--yes[Always say yes to every confirmation]'
        '(-v --verbose)'{-v,--verbose}'[Enable verbose output]'
        '(--show-repo-map)--show-repo-map[Print the repo map and exit]'
        '(--show-prompts)--show-prompts[Print the system prompts and exit]'
        '(--exit)--exit[Do all startup activities then exit before accepting user input]'
        '(-m --message --msg)'{-m,--message,--msg}'[Specify a single message to send the LLM, process reply then exit]:message'
        '(-f --message-file)'{-f,--message-file}'[Specify a file containing the message to send the LLM, process reply, then exit]:file:_files'
        '(--encoding)--encoding[Specify the encoding for input and output]:encoding'
        '(-c --config)'{-c,--config}'[Specify the config file]:file:_files'
        '(--gui --browser)'{--gui,--browser}'[Run aider in your browser]'
        '(--suggest-shell-commands --no-suggest-shell-commands)'{--suggest-shell-commands,--no-suggest-shell-commands}'[Enable/disable suggesting shell commands]'
    )

    _arguments -s -S $options '*:file:_files'
}

_aider
